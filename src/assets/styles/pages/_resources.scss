.page--resources {
  .content {
    flex: 0 0 90%;
    padding-top: rem(32);
  }

  .resources-container {
    column-gap: rem(32);
    display: grid;
  }

  .filter {
    display: flex;
    flex-direction: column;
    padding-left: rem(8);
    padding-right: rem(8);
    padding-top: rem(32);

    h2 {
      margin-bottom: rem(8);
    }

    .filter-expand-button {
      border-top: rem(3) solid var(--fl-fgColor, var(--indigo-500));
      column-gap: rem(8);
      display: grid;
      grid-template-columns: 1fr 20fr 1fr;
      margin-top: 0;
      padding: rem(8) 0;

      .filter-title {
        column-gap: rem(8);
        display: flex;

        p {
          color: var(--fl-fgColor, var(--indigo-500));
          margin-top: 0;
        }
      }

      svg {
        height: rem(16);
        margin: auto;
        stroke: var(--fl-fgColor, var(--indigo-500));
        width: rem(16);
      }

      &:hover {
        background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
        border-top: rem(3) solid var(--fl-bgColor, var(--indigo-800));

        .filter-title {
          background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
        }

        p {
          background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
          color: var(--fl-bgColor, var(--indigo-800)) !important;
        }

        svg {
          background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
          stroke: var(--fl-bgColor, var(--indigo-800));
        }
      }

      &:focus {
        border-top: rem(3) solid transparent;
        outline: var(--fl-fgColor, var(--indigo-500)) solid rem(3);
      }

      &[aria-expanded='false'] {
        .icon-plus {
          display: block;
        }

        .icon-minus {
          display: none;
        }
      }

      &[aria-expanded='true'] {
        .icon-plus {
          display: none;
        }

        .icon-minus {
          display: block;
        }
      }
    }

    // Override the default style defined in _base.scss
    ul {
      margin: rem(16) 0 rem(16) 0;

      li {
        margin-bottom: rem(8);

        &::before {
          content: none;
        }
      }
    }

    // Custom checkboxes. Reference: https://codepen.io/spacemonkey/pen/vmZROv
    .filter-checkbox {
      opacity: 0; // hide it
      position: absolute; // take it out of document flow

      & + label {
        cursor: pointer;
        padding: 0;
        position: relative;
      }

      // Box
      & + label::before {
        border-radius: rem(3);
        content: '';
        display: inline-block;
        height: rem(20);
        margin: rem(4) rem(10) 0 0;
        outline: rem(1) solid var(--fl-fgColor, var(--indigo-500));
        vertical-align: text-top;
        width: rem(20);
      }

      // Checkmark
      &:checked + label::after {
        color: var(--fl-bgColor, $white);
        content: '\2713';
        display: inline-block;
        font-size: rem(18);
        height: rem(2);
        left: rem(4);
        position: absolute;
        top: 0;
        width: rem(2);
      }
    }

    // End of custom checkboxes
  }

  .apply-button {
    background-color: var(--fl-fgColor, var(--indigo-500));
    border: 2px solid var(--fl-fgColor, var(--indigo-500));
    border-radius: rem(5);
    color: var(--fl-bgColor, $white);
    font-size: rem(16);
    font-weight: var(--fw-medium);
    line-height: rem(24);
    margin-top: rem(16);
    padding: rem(10) rem(14);

    &:hover {
      background-color: var(--fl-fgColor, var(--indigo-800)) !important;
      border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;
      color: var(--fl-bgColor, #fff) !important;
    }

    &:focus {
      background-color: var(--fl-fgColor, var(--indigo-800));
      border: 2px solid var(--fl-fgColor, var(--indigo-800));
      color: var(--fl-bgColor, #fff);
      outline: var(--fl-fgColor, var(--indigo-500)) solid rem(3);
      outline-offset: rem(3);
    }
  }

  .reset-button {
    background-color: var(--fl-fgColor, var(--grey-100));
    border: 2px solid var(--fl-fgColor, var(--indigo-500));
    border-radius: rem(5);
    color: var(--fl-bgColor, var(--indigo-500));
    font-size: rem(16);
    font-weight: var(--fw-medium);
    padding: rem(10) rem(14);

    &:hover {
      background-color: var(--fl-fgColor, var(--grey-100)) !important;
      border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;
      color: var(--fl-bgColor, --indigo-800) !important;
    }

    &:focus {
      background-color: var(--fl-fgColor, var(--grey-100));
      border: 2px solid var(--fl-fgColor, var(--indigo-800));
      color: var(--fl-bgColor, --indigo-800);
      outline: var(--fl-fgColor, var(--indigo-800)) solid rem(3);
      outline-offset: rem(3);
    }
  }

  .resources-no-results {
    background-color: var(--grey-100);
    font-size: rem(20);
    font-weight: 600;
    margin-bottom: rem(24);
    margin-top: rem(16);
    padding: rem(16);
    padding-left: rem(20);
  }

  .resources-applied-filters {
    margin: 0;
    padding-bottom: rem(16);

    h3 {
      border-top: 2px solid var(--grey-200);
      margin-top: 0;
      padding-top: rem(16);
    }

    .filter-tags {
      display: flex;
      flex-wrap: wrap;
      gap: rem(16);

      .filter-tag {
        background-color: #f2f2f2;
        border: 2px solid var(--fl-fgColor, var(--indigo-500));
        border-radius: rem(48);
        column-gap: rem(4);
        display: flex;
        justify-content: center;
        padding: rem(8);
        white-space: nowrap;

        p {
          color: var(--fl-fgColor, var(--indigo-500));
          margin: auto;
        }

        svg {
          height: rem(16);
          margin: auto;
          stroke: var(--fl-buttonFgColor, var(--indigo-500));
          width: rem(16);
        }

        &:hover {
          background-color: var(--fl-fgColor, var(--grey-100)) !important;
          border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;

          p:not(:focus) {
            background-color: var(--fl-fgColor, var(--grey-100)) !important;
            color: var(--fl-bgColor, var(--indigo-800)) !important;
          }

          svg:not(:focus) {
            background-color: var(--fl-fgColor, var(--grey-100)) !important;
            stroke: var(--fl-bgColor, var(--indigo-800)) !important;
          }
        }

        &:focus {
          background-color: var(--fl-fgColor, var(--grey-100));
          border: 2px solid var(--fl-fgColor, var(--indigo-800));
          color: var(--fl-bgColor, var(--indigo-800));
          outline: var(--fl-fgColor, var(--indigo-800)) solid rem(3);
          outline-offset: rem(3);

          p {
            background-color: var(--fl-buttonBgColor, var(--grey-100)) !important;
            color: var(--fl-buttonFgColor, var(--indigo-800)) !important;
          }

          svg {
            background-color: var(--fl-buttonBgColor, var(--grey-100)) !important;
            stroke: var(--fl-buttonFgColor, var(--indigo-800)) !important;
          }
        }
      }

      .filter-clear-all {
        margin: auto 0;
      }
    }
  }

  .resources-filtered-number {
    font-size: rem(16);
    font-weight: 400;
    padding: rem(16) 0 rem(16) 0;
  }

  .card {
    border-top: 2px solid var(--coral-500);
    margin-bottom: rem(48);

    .card-image {
      margin: rem(16);
      object-fit: contain;
    }

    .card-title {
      margin-top: rem(8);
    }

    .card-tags {
      display: flex;
      flex-wrap: wrap;
      gap: rem(16);
      margin-bottom: rem(8);
      margin-top: rem(8);

      .card-tag {
        background-color: #f2f2f2;
        border-radius: rem(48);
        column-gap: rem(4);
        display: flex;
        justify-content: center;
        padding: rem(8);
        white-space: nowrap;

        p {
          margin-top: 0;
        }

        svg {
          height: rem(16);
          margin: auto;
          stroke: var(--fl-fgColor, var(--black));
          width: rem(16);
        }
      }
    }

    .card-publishedYear {
      margin-top: rem(16);
    }

    .card-link {
      margin-top: rem(16);

      a {
        display: grid;
        gap: rem(4);
        grid-template-columns: max-content min-content;
        width: min-content;
      }

      svg {
        height: rem(16);
        margin: auto;
        width: rem(16);
      }
    }
  }
}

// Custom styles when "enhance inputs" is enabled
// Custom checkbox
.fl-input-enhanced .filter-checkbox + label::before {
  outline: rem(3) double var(--fl-fgColor, var(--indigo-500));
}

// Box checked
.filter .filter-checkbox:checked + label::before {
  background: var(--fl-fgColor, var(--indigo-500));
}

// Box active
.filter .filter-checkbox:active + label::before {
  background-color: var(--fl-bgColor, var(--indigo-500));
  border: rem(2.5) solid var(--fl-fgColor, var(--indigo-500));
}

// Box focus
.filter .filter-checkbox:focus + label::before,
.filter .filter-checkbox:hover + label::before {
  outline: rem(3.5) double var(--fl-fgColor, var(--indigo-500));
}

// Box focus when "enhance inputs" is enabled
.fl-input-enhanced .filter-checkbox:focus + label::before,
.fl-input-enhanced .filter-checkbox:hover + label::before {
  border: rem(2.5) solid var(--fl-fgColor, var(--indigo-500));
  outline: none;
}

@include breakpoint-up(sm) {
  .page--resources {
    .resources-container {
      grid-template-columns: 1fr 2fr;
    }

    .resources-applied-filters {
      padding-right: rem(64);
    }

    .resources-result {
      padding-right: rem(64);
    }

    .card {
      display: grid;
      grid-template-columns: 2fr 1fr;
    }

    .filter {
      padding-left: rem(64);
      padding-right: 0;
    }
  }
}
